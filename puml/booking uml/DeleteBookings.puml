@startuml Delete Booking

footer Page %page% of %lastpage%
title "Delete Booking"

participant "user/admin" as user
participant "<<javaScript>>\n:server" as server
participant "<<router>>\n:bookings" as routerbooking
participant "<<controllers>>\n:bookings" as controllersbookings
participant "<<model>>\n:Booking" as modelBooking
database "<<MongoDB>>\n:DentistBooking" as DentistBookingDatabase

' user sends a DELETE request to remove a booking by ID
user->server ++: req.delete('/api/v1/bookings/:id')
server->routerbooking ++: app.use('/api/v1/bookings', bookings)
routerbooking -> controllersbookings ++: deleteBooking()
' Controller fetches the booking to be deleted
controllersbookings -> modelBooking ++: findBookingById()
modelBooking -> DentistBookingDatabase ++: Booking.findById()
DentistBookingDatabase --> modelBooking --: booking
' Controller checks if the user is the owner of the booking or has admin privileges
controllersbookings -> modelBooking ++: validateOwner()
modelBooking --> controllersbookings --: isOwnerValid
' Controller deletes the booking if authorized
controllersbookings -> modelBooking ++: deleteBooking()
modelBooking -> DentistBookingDatabase ++: Booking.deleteOne()
DentistBookingDatabase --> modelBooking --: bookingDeleted
' Controller sends the response confirming deletion back to the user
controllersbookings <-- modelBooking --: bookingDeleted
controllersbookings -> user --: response

@enduml
